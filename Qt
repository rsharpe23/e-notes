ПЕРВОЕ ПРИЛОЖЕНИЕ И ОБЗОР МОДУЛЕЙ

Приложение должно начинаться с подключения хотя бы одного их следующих модулей: 
QtCore, QtGui, QtWidgets. Но обычно подключают только QtWidgets.

Далее необходимо создать объект класса QApplication. Он осуществяет управление
приложением. Для каждого приложения этот объект должен создаваться только один раз 
и до любых операций, связанных с пользовательским интерфейсом.

После создания этого объекта, необхоимо вызвать его метод exec(). Он запустит цикл
обработки событий. Этот цикл передает получаемые от системы события на обработку. 
По завершении работы приложения, метод exec() возвращает код завершения.

Элементы управления (виджеты) не отображаются сразу после создания. 
Для их отображения нужно использовать метод show().

Пример минимального приложения:
...
#include <QtWidgets>

int main(int argc, char** argv) 
{
    QApplication app(argc, argv);

    QLabel label("Hello!");  -->  элемент управления
    label.show();

    return app.exec();  
}

Библиотека Qt разбита на модули:
* QtCore - модуль ядра, состоящий из классов, не связанных с GUI;
* QtGui - модуль базовых классов для работы с GUI и OpenGL; 
* QtWidgets - модуль, дополняющий QtGui виджетами и хранящий QApplication;
* QtQuick - модуль, содержащий фреймворк для быстрого создания GUI;
* QtQML - модуль, содержащий движок для языков QML и JS;
* QtNetwork - модуль для работы с сетью;
* QtSql - модуль для работы с базами данных;
* QtSvg - модуль для работы с SVG
* QtXml - модуль поддержки XML, с классами относящимися к SAX и DOM;
* QtXmlPatternts - модуль поддержки XPath, XQuery, XSLT и XmlShemaValidator;
* QtMultimedia - модуль классов для работы со звуком, видео, камерой, радио и т.п.;
* QtMultimediaWidgets - модуль виджетов для QtMultimedia;
* QPrintSupport - модуль для работы с принтером;
* QtTest - модуль для тестерования кода.

Для каждого модуля предоставляется отдельный заголовочный файл. Название такого файла
всегда соответсвует названию самого модуля, например: #include <QtGui>

Модуль QtCore является базовым для всех других модулей. Он позволяет реализовывать
приложения без GUI, например консольные приложения.

Модули QtQuick и QtQML - это альтернатива виджетам. Они предоставляют набор технологий
для быстрой и современной разработки графических приложений на QML и JS.

Допольнительные модули:
* QtWebEngineCore - интегрирует в приложение возможности веб;
* QtWebEngineWidgets - удобные виджеты для веб;
* Qt3D - модуль для упрощенной работы с 3d графикой;
* QtBluetooth - модуль для работы с Bluetooth;
* QtLocation - модуль для работы с геолокацией и местоположением;
* QtSensors - обеспечивает доступ к сенсорам моб. устройств и акселерометрам;
  поддерживает такие платформы, как: Android, iOS, SailFish, WinRT;
* QtCharts - модуль для отображения графиков;
* QtDataVisialization - модуль для отображения графиков в 3d;
* QtVirtualKeyboard - виртуальная клавиатура для настольных компьютеров;
* QtRemoteObjects - модуль для межпроцессного взаимодействия (IPC), 
  обеспечивающий обмен информацией между приложениями;

Пространство имен Qt содержит ряд перечислений и констант, которые часто применяются
при работе. Подключить его можно так: using namespace Qt.

