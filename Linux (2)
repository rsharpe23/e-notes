КОМАНДНАЯ СТРОКА

Для работы в командной строке, Linux предоставляет оболочку (shell). 
Оболочка - это командный интерпритатор. Наиболее популярная оболочка - bash.

Команда состоит из 3х частей: сама команда, её (необязательные) параметры 
и аргументы, например: ls [-l] [/usr].

Аргументы обычно предоставляют объекты, к которым применяется команда. Они указываются
в конце. Например по умолчанию ls применяется к текущему каталог, но если задать
аргумент /usr, то команда применится к этому каталогу.

С пом. символа | можно состовлять цепочки команд: ls -R /usr | less.
Здесь ls -R /usr отправляет свой результат команде less.

С пом. символа > можно перенаправить результат выполнения команды, например с консоли
(по умолчан.) в файл: ls -l > file (если файл не был ранее создан, то создастся).

Для перенаправления ошибок используется символ 2>: ls -l > file 2> error.

Для получения информации о команде используется команда man: man название_команды.
Информация обычно состоит из следующих секций:

 * name - имя команды, и краткое описание;
 * synopsis - как использовать команду; отображает все доступные пар-ры;
 * description - полное описание;
 * options - список всех доступных параметров;
 * see alse - список связанных команд.

Альтернативным способом получения информации о команде является её опция --help.

Оболочка bash запоминает историю ввода команд и позволяет повторно использовать
недавние команды. Навигацию по командам можно выполнить с пом. стрелок.

Многие дистрибутивы запоминают только последнии 1000 команд. Эти команды хранятся 
в файле .bash_history, в домашнем каталоге пользователя. 

Чтобы увидеть историю можно ввести в терминале history. Удалить историю можно либо 
с пом. команды history -c, либо просто очистить файл вручную.

Информационные команды:

 * uname - отображает имя хоста системы и информацию об ОС;

 * lsb_release - информация о LSB (Linux Standart Base), т.е. стандартная 
   базовая версия Linux;

 * hostnamectl - используется для отображения и изменения имени хоста, а также для
   просмотра настроек системы (архитектура, режим загрузки, часовой пояс и пр.);
   не требует входа в систему под root'ом;

 * date - отображает текущую дату.

-------------------

РАБОТА С ФАЙЛАМИ И КАТАЛОГАМИ

Корневой каталог имеет путь "/". Перечень стандартных каталогов:

 * /bin - приложения, которые можно запускать через командную строку;
   в основном хранит утилиты, например: bash, cp, cat и др.

 * /etc - конфигурационные файлы системы, например: passwd, hosts, networks и т.д.;
 * /boot - компоненты для загрузки системы, в частности, ядро (файл vmlinuz);
 
 * /sbin - системные приложения для администрирования и восстановления системы,
   например: fdisk, ifconfig, reboot и пр.

 * /usr - пользовательские приложения и данные (аналог Program Files);
 * /usr/bin - большинство пользовательских приложений;
 * /usr/src - исходные файлы open-source приложений (в основном c/cpp);
 * /usr/include - стандартные заголовочные файлы языка C;
 * /usr/lib - библиотеки приложений и устанавливаемые пакеты;
 * /usr/local - локальные приложения;
 * /usr/share - статические разделяемые данные;

 * /var - файлы данных, которые могут изменяться;
 * /var/cache - кэш приложений;
 * /var/include - стандартные заголовочные файлы языка C;
 * /var/lib - данные о состоянии системы;
 * /var/lock - заблокированные данные для отслеживания используемых ресурсов;
 * /var/log - файлы логов;
 * /var/opt - данные установленных пакетов;
 * /var/spool - выполняемые задачи (кроны и пр.);
 * /var/tmp - временные файлы, удаляемые после новой загрузки системы;

 * /dev - файлы устройств; в Linux все оборудование, с которым можно работать,
   соответсвует файлу в системе; если надо обратиться к hardware, то следует 
   обратиться к соответсвующему файлу (с правами root).

 * /home - домашний каталог пользователя;

 * /lib - общие библиотеки приложений, а также драйвера, используемые ядром;
 * /media - каталог для монтирования съемных устройств, например USB;

 * /mmt - тоже самое что и предыдущий, только на старых системах; 
   иногда используется в целях тестирования;

 * /opt - доп. пользовательские приложения; в отличие от /usr обычно помещают более
   крумные файлы, однако единого мнения нет, что помещать в /usr, а что в /opt.

 * /proc - файлы процессов, информация о ядре и компьютере;
 * /root - домашний каталог суперпользователя (системного администратора);

 * /run - используется для конфигурации во время выполнения; файлы удаляются 
   автоматически, когда становятся не нужны;

 * /srv - файлы некоторых важных сервисов, например здесь может хранится файловая
   структура своего веб-сервера и ftp-сервера.

 * /sys - похож на /proc, но хранит свою информацию на жестком диске, поэтому она
   доступна после перезагрузки; здесь информация больше связана с оборудованием,
   тогда как в /proc - с ядром.

 * /tmp - временные файлы, автоматически удаляемые при перезагрузке;

Команды для работы с каталогами:
 
 * pwd - выводит полный путь к текущему каталогу;

 * cd - позволяет перемещаться по каталогам; абсолютные путь задается через косую 
   черту перед именем каталога, иначе команда попытается найти относительный каталог;
   для переходу к домашнему каталогу применяется символ ~ (алиас для /home/user);
   для перехода на один/два уровня вверх применятеся путь .., ../../ (и т.д.);

 * mkdir - создает каталог; параметр -p позвоялет создать папку вместе с родительской
   (если та отсутствует): mkdir folder, mkdir -p ~/folder1/folder2

 * rmdir - удаляет пустой каталог: rmdir folder; если в каталоге есть файлы или
   подкаталоги, то применяется команда rm -r или -rf: rm -r folder

Команда ls отображает список файлов и папок в заданном каталоге.
Команда ls * выводит также содержимое подкаталогов.

Основные опции ls:
 -R - рекурсивно выводит содержимое подкаталогов (указывается вместо *);
 -d - выводит только каталоги. 
 -s - выводит файлы с их размером;
 -S - файлы, отсортированные по размеру;
 -t - файлы, отсортированные по времени доступа;

 -l - файлы и каталоги с их свойствами (права, владелец, размер и пр.); права файла
 имеет след. структуру drwxrwxr-x; самый первый символ указ. на тип файла, d обознач.
 каталог, l - символьную ссылку, а дефис - файл; далее идут 9 знаков разрешений;

 -a - выводит скрытые файлы.

При выводе списка файлов, вместо каталога можно задать шаблон с рег. выр-ем, 
который определит конкертные файлы для вывода, например:

 ls /project/*.min.js  -->  выберет все файлы c окончанием .min.js
 ls /project/[abc]*    -->  все файлы и папки, кот. начинаются на a, b или c

Команды для работы с файлами:

 * touch - создаёт файл: touch hello.txt
 * rm - удаляет файл: rm hello.txt; опция -r удаляет также и каталог;
 * cat - выводит содержимое файла: cat hello.txt;

 * cp - копирует файл: cp /etc/hello.txt /usr/hello.txt, cp hello.txt /folder

   (во втором примере важно чтобы folder уже существовал, иначе будет создан 
   текстовый файл folder с содержимым hello.txt); 

   опция -r позволяет копировать каталог: cp -r folder1 folder2 
   (folder2 создается автоматически);

   символ * копирует все файлы из текущего каталога: cp * /usr, cp .* /usr 
   (во втором примере копируются все скрытые файлы);

   другие опции:
    -a - копирует также свойства файлов;
    -b - создает резервные копии перед копированием;
    -f - принудительное копирование (когда файл запрещено копир. в место назначения);
    -i - запрашивает перезапись, если файл уже существует;
    -u - копируется только если целевой файл старше исходного файла, 
    или если целевой файл не существует;

 * mv - перемещает файл/каталог, а также переименовывает его: 
   mv hello.txt /folder (folder должен существовать), mv hello.txt world.txt;

 * wc - выводит кол-во строк, слов и символов в файле.

Команда ln -s создает символьную ссылку файла (ярлык): ln -s hello.txt /usr/hello
(в каталоге usr создается ссылка hello на файл hello.txt)

Команда find применяется для поиска файлов и каталогов: find /usr -name "*.txt"
(сначала указывается папка, затем опция критерия, и шаблон поиска)

Основные опции find:

 -amin n - находит все файлы, к которым последний раз обращались менее n 
 минут назад, например: find -amin 5;

 -executable - находит все исполняемые файлы;
 -group name - все файлы, владельцем которых является пользователь с логином name;
 -mmin n - все файлы, которые последний раз были изменены менее n минут назад;
 -newer file - все файлы новее, чем файл file;
 -nogroup/nouser - все файлы, у которых нет группы или владельца;
 -perm mode - все файлы, у которых установлен режим разрешений mode;

 -size n - находит все файлы размера n (либо больше/меньше); к n также применяются
 символы K, M и G для обозначения килобайтов, мегабайтов и гигабайтов соответсвенно,
 например: find /usr -size +2G (все файлы более 2 гиг);

 -type t - находит файлы по типу; тип d - это каталог, а f - файл.

Команда whereis применяется для поиска местоположений бинарный файлов, исходных файлов,
а также файлов команд, например: whereis gcc найдет местоположение команды gcc.

Команда mount применяется для ручного монтирования устройства в файловую систему. 
(в Linux, монтируемые устройства называются файлововыми системами).

Эта команда принимает два аргумента: монтируемое устройство и место монтирования. 
В качестве монтируемого устройства выступает его название (например, название диска).
В качестве места, куда оно монтируется, выступает каталог /media.

 mount /dev/phone /media/username/folder  -->  теперь можно перейти в folder
                                               и посмотреть содержимое устройства
Основные опции mount:
 -t - тип файловой системы (ext4, vfat, ntfs);
 -r - монтирует устройство только для чтения (по умолчанию -rw);

При запуске компьютера некоторые файловые системы монтируются автоматически. 
Для этого используется файл /etc/fstab. Он содержит список всех автоматических
подключений. Некоторым файловым системам можно убрать автомонтирование.

В Linux, перед отсоединением устройства от компьютера нужно сначала отключить его.
Отключение устройства гарантирует, что все данные, которые находятся в кэше или еще 
не были записаны, запишутся в файловую систему. 

Для отключения устройства используется команда: unmount /dev/sda1.

Но иногда она может выдать сообщение, что устройство занято открытым файлом, 
а отключение может привести к потере данных. В этом случае для завершения процессов, связанных с устройством, можно использовать команду: fuser -kv /dev/sda1.

Команда mount без аргументов выводит информацию обо всех смонтированных устройствах.
Команда df -h показывает более читабельную информацию об устройствах, чем mount.
Команда lsblk отображает устройства, доступные в текущий момент на компьютере.

Устройства, которые называются как /dev/sd[x] представляют жесткие SATA-диски 
и USB-девайсы. Основными элементами жетского диска являются разделы (участки диска).

Управлять дисками и разделами можно с пом. таких утилит, как fdisk и gdisk.

-------------------

РАБОТА С ТЕКСТОВЫМИ ФАЙЛАМИ

